# Merge avg and reorder category
data_long <- data_long %>%
left_join(cat_order, by = "category") %>%
mutate(category = fct_reorder(category, m))
conf_colors <- setNames(brewer.pal(4, "Set2"),
c("Not sure", "Somewhat sure", "Pretty sure", "Very sure"))
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 3, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
data_long <- df %>%
filter(ont_ctry_name %in% c("US", "Ghana", "Ecuador_Amazon", "Peru_Amazon")) %>%
select(ont_ctry_name,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_gvt, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_ghs, fic_conf.ext_hap,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_frc, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_abs, fic_conf.ext_kwk,
sci_conf.ext_flu, spn_conf.ext_wen, ord_conf.ext_mug, sci_conf.ext_par, fic_conf.ext_spd,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_okw, fic_conf.ext_ram,
spn_conf.ext_ysh, sci_conf.ext_par, spn_conf.ext_god, ord_conf.ext_tbl,
fic_conf.ext_njt, spn_conf.ext_cha, sci_conf.ext_cnc,
sci_conf.ext_grm, nas_conf.ext_ron, ord_conf.ext_taz, spn_conf.ext_oni,
fic_conf.ext_smn, nas_conf.ext_dlp) %>%
mutate(across(-ont_ctry_name, as.numeric)) %>%
pivot_longer(-ont_ctry_name, names_to = "question", values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(category = recode(question,
sci_conf.ext_grm = "Scientific",
sci_conf.ext_frc = "Scientific",
sci_conf.ext_cnc = "Scientific",
sci_conf.ext_flu = "Scientific",
sci_conf.ext_par = "Scientific",
sci_conf.ext_gvt = "Scientific",
ord_conf.ext_mug = "Ordinary",
ord_conf.ext_tbl = "Ordinary",
ord_conf.ext_taz = "Ordinary",
spn_conf.ext_god = "Supernatural",
spn_conf.ext_dem = "Supernatural",
spn_conf.ext_wen = "Supernatural",
spn_conf.ext_okw = "Supernatural",
spn_conf.ext_abs = "Supernatural",
spn_conf.ext_ysh = "Supernatural",
spn_conf.ext_cha = "Supernatural",
nas_conf.ext_ron = "Supernatural",
spn_conf.ext_oni = "Supernatural",
nas_conf.ext_dlp = "Supernatural",
spn_conf.ext_ghs = "Supernatural",
fic_conf.ext_kwk = "Fictional",
fic_conf.ext_smn = "Fictional",
fic_conf.ext_spd = "Fictional",
fic_conf.ext_ram = "Fictional",
fic_conf.ext_njt = "Fictional",
fic_conf.ext_hap = "Fictional"),
response_txt = recode(response,
`0` = "Not sure",
`1` = "Somewhat sure",
`2` = "Pretty sure",
`3` = "Very sure")) %>%
filter(!is.na(category))
# Compute avg per category
cat_order <- data_long %>%
group_by(category) %>%
summarise(m = mean(response))
# Merge avg and reorder category
data_long <- data_long %>%
left_join(cat_order, by = "category") %>%
mutate(category = fct_reorder(category, m))
conf_colors <- setNames(brewer.pal(4, "Set2"),
c("Not sure", "Somewhat sure", "Pretty sure", "Very sure"))
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 3, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
data_long <- df %>%
filter(ont_ctry_name %in% c("US", "Ghana", "Ecuador_Amazon", "Peru_Amazon")) %>%
select(ont_ctry_name,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_gvt, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_ghs, fic_conf.ext_hap,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_frc, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_abs, fic_conf.ext_kwk,
sci_conf.ext_flu, spn_conf.ext_wen, ord_conf.ext_mug, sci_conf.ext_par, fic_conf.ext_spd,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_okw, fic_conf.ext_ram,
spn_conf.ext_ysh, sci_conf.ext_par, spn_conf.ext_god, ord_conf.ext_tbl,
fic_conf.ext_njt, spn_conf.ext_cha, sci_conf.ext_cnc,
sci_conf.ext_grm, nas_conf.ext_ron, ord_conf.ext_taz, spn_conf.ext_oni,
fic_conf.ext_smn, nas_conf.ext_dlp) %>%
mutate(across(-ont_ctry_name, as.numeric)) %>%
pivot_longer(-ont_ctry_name, names_to = "question", values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(category = recode(question,
sci_conf.ext_grm = "Scientific",
sci_conf.ext_frc = "Scientific",
sci_conf.ext_cnc = "Scientific",
sci_conf.ext_flu = "Scientific",
sci_conf.ext_par = "Scientific",
sci_conf.ext_gvt = "Scientific",
ord_conf.ext_mug = "Ordinary",
ord_conf.ext_tbl = "Ordinary",
ord_conf.ext_taz = "Ordinary",
spn_conf.ext_god = "Supernatural",
spn_conf.ext_dem = "Supernatural",
spn_conf.ext_wen = "Supernatural",
spn_conf.ext_okw = "Supernatural",
spn_conf.ext_abs = "Supernatural",
spn_conf.ext_ysh = "Supernatural",
spn_conf.ext_cha = "Supernatural",
nas_conf.ext_ron = "Supernatural",
spn_conf.ext_oni = "Supernatural",
nas_conf.ext_dlp = "Supernatural",
spn_conf.ext_ghs = "Supernatural",
fic_conf.ext_kwk = "Fictional",
fic_conf.ext_smn = "Fictional",
fic_conf.ext_spd = "Fictional",
fic_conf.ext_ram = "Fictional",
fic_conf.ext_njt = "Fictional",
fic_conf.ext_hap = "Fictional"),
response_txt = recode(response,
`0` = "Not sure",
`1` = "Somewhat sure",
`2` = "Pretty sure",
`3` = "Very sure")) %>%
filter(!is.na(category))
# Compute avg per category
cat_order <- data_long %>%
group_by(category) %>%
summarise(m = mean(response))
# Merge avg and reorder category
data_long <- data_long %>%
left_join(cat_order, by = "category") %>%
mutate(category = fct_reorder(category, m))
conf_colors <- setNames(brewer.pal(4, "Set2"),
c("Not sure", "Somewhat sure", "Pretty sure", "Very sure"))
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(text = element_text(size = 14))
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(text = element_text(size = 14)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),  # Increase legend labels
legend.title = element_text(size = 16, face = "bold")) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
title.text = element_text(size = 22)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22),
strip.text = element_text((size = 15))) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
?facet_wrap
data_long <- df %>%
filter(ont_ctry_name %in% c("US", "Ghana", "Ecuador_Amazon", "Peru_Amazon")) %>%
select(ont_ctry_name,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_gvt, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_ghs, fic_conf.ext_hap,
sci_conf.ext_grm, spn_conf.ext_dem, ord_conf.ext_mug, sci_conf.ext_frc, fic_conf.ext_smn,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_abs, fic_conf.ext_kwk,
sci_conf.ext_flu, spn_conf.ext_wen, ord_conf.ext_mug, sci_conf.ext_par, fic_conf.ext_spd,
sci_conf.ext_cnc, spn_conf.ext_god, ord_conf.ext_tbl, spn_conf.ext_okw, fic_conf.ext_ram,
spn_conf.ext_ysh, sci_conf.ext_par, spn_conf.ext_god, ord_conf.ext_tbl,
fic_conf.ext_njt, spn_conf.ext_cha, sci_conf.ext_cnc,
sci_conf.ext_grm, nas_conf.ext_ron, ord_conf.ext_taz, spn_conf.ext_oni,
fic_conf.ext_smn, nas_conf.ext_dlp) %>%
mutate(across(-ont_ctry_name, as.numeric)) %>%
pivot_longer(-ont_ctry_name, names_to = "question", values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(category = recode(question,
sci_conf.ext_grm = "Scientific",
sci_conf.ext_frc = "Scientific",
sci_conf.ext_cnc = "Scientific",
sci_conf.ext_flu = "Scientific",
sci_conf.ext_par = "Scientific",
sci_conf.ext_gvt = "Scientific",
ord_conf.ext_mug = "Ordinary",
ord_conf.ext_tbl = "Ordinary",
ord_conf.ext_taz = "Ordinary",
spn_conf.ext_god = "Supernatural",
spn_conf.ext_dem = "Supernatural",
spn_conf.ext_wen = "Supernatural",
spn_conf.ext_okw = "Supernatural",
spn_conf.ext_abs = "Supernatural",
spn_conf.ext_ysh = "Supernatural",
spn_conf.ext_cha = "Supernatural",
nas_conf.ext_ron = "Supernatural",
spn_conf.ext_oni = "Supernatural",
nas_conf.ext_dlp = "Supernatural",
spn_conf.ext_ghs = "Supernatural",
fic_conf.ext_kwk = "Fictional",
fic_conf.ext_smn = "Fictional",
fic_conf.ext_spd = "Fictional",
fic_conf.ext_ram = "Fictional",
fic_conf.ext_njt = "Fictional",
fic_conf.ext_hap = "Fictional"),
response_txt = recode(response,
`0` = "Not sure",
`1` = "Somewhat sure",
`2` = "Pretty sure",
`3` = "Very sure")) %>%
filter(!is.na(category))
# Compute avg per category
cat_order <- data_long %>%
group_by(category) %>%
summarise(m = mean(response))
# Merge avg and reorder category
data_long <- data_long %>%
left_join(cat_order, by = "category") %>%
mutate(category = fct_reorder(category, m))
conf_colors <- setNames(brewer.pal(4, "Set2"),
c("Not sure", "Somewhat sure", "Pretty sure", "Very sure"))
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
?ggplot
?labs()
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22),
strip.text.x = element_text(size = 15)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22),
strip.text.x = element_text(size = 15),
legend.text = element_text(size = 12)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
# Create stacked bar plot
data_long %>%
ggplot(aes(x = category, fill = response_txt)) +
geom_bar(position = "fill") +  # Stacked proportions
geom_text(stat = "count", aes(label = after_stat(count)),
position = position_fill(vjust = 0.5),
size = 5, color = "white") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = conf_colors, drop = FALSE) +
theme_minimal() +
labs(
x = "",
y = "Proportion of Responses",
fill = "Confidence",
title = "Confidence by Category and Country"
) +
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 22),
strip.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size =14)) +
facet_wrap(~ ont_ctry_name, ncol = 4) +  # Separate plots for each country
coord_flip()  # Flipped bars for readability
